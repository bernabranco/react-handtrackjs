{"ast":null,"code":"var _jsxFileName = \"/Users/bernardoagbranco/react-threejs/react-threejs-webcam/src/components/Handtrack.js\",\n    _s = $RefreshSig$();\n\nimport * as handTrack from 'handtrackjs';\nimport { React, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Handtrack() {\n  _s();\n\n  var video = document.getElementById(\"video\");\n  handTrack.startVideo(video);\n\n  const handtracker = () => {\n    var video = document.getElementById(\"video\");\n    var canvas = document.getElementById(\"canvas\");\n    var context = canvas.getContext('2d');\n    var mediasource = video; // Load the model.\n\n    handTrack.load().then(model => {\n      // detect objects in the image.\n      console.log(\"model loaded\");\n      model.detect(video).then(predictions => {\n        console.log('Predictions: ', predictions);\n        model.renderPredictions(predictions, canvas, context, mediasource);\n      });\n    });\n  };\n\n  const [time, setTime] = useState(0);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setTime(time + 1);\n    }, 500);\n    return () => clearTimeout(timer);\n  });\n  useEffect(() => {\n    var video = document.getElementById(\"video\");\n    video.addEventListener('loadeddata', () => {\n      handtracker();\n    }, [time]);\n  });\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    id: \"canvas\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Handtrack, \"MKSDRnVD8TV1Mja1sy+VW64ucwY=\");\n\n_c = Handtrack;\n\nvar _c;\n\n$RefreshReg$(_c, \"Handtrack\");","map":{"version":3,"sources":["/Users/bernardoagbranco/react-threejs/react-threejs-webcam/src/components/Handtrack.js"],"names":["handTrack","React","useEffect","useState","Handtrack","video","document","getElementById","startVideo","handtracker","canvas","context","getContext","mediasource","load","then","model","console","log","detect","predictions","renderPredictions","time","setTime","timer","setTimeout","clearTimeout","addEventListener"],"mappings":";;;AAAA,OAAO,KAAKA,SAAZ,MAA2B,aAA3B;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAEhC,MAAIC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAZ;AACAP,EAAAA,SAAS,CAACQ,UAAV,CAAqBH,KAArB;;AAEA,QAAMI,WAAW,GAAG,MAAM;AACtB,QAAIJ,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAZ;AACA,QAAIG,MAAM,GAAGJ,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAb;AACA,QAAII,OAAO,GAAGD,MAAM,CAACE,UAAP,CAAkB,IAAlB,CAAd;AACA,QAAIC,WAAW,GAAGR,KAAlB,CAJsB,CAMtB;;AACAL,IAAAA,SAAS,CAACc,IAAV,GACCC,IADD,CACMC,KAAK,IAAI;AACX;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAF,MAAAA,KAAK,CAACG,MAAN,CAAad,KAAb,EAAoBU,IAApB,CAAyBK,WAAW,IAAI;AACpCH,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BE,WAA7B;AACAJ,QAAAA,KAAK,CAACK,iBAAN,CAAwBD,WAAxB,EAAqCV,MAArC,EAA6CC,OAA7C,EAAsDE,WAAtD;AACH,OAHD;AAIH,KARD;AASH,GAhBD;;AAkBA,QAAM,CAACS,IAAD,EAAMC,OAAN,IAAiBpB,QAAQ,CAAC,CAAD,CAA/B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMsB,KAAK,GAAGC,UAAU,CAAC,MAAM;AAC3BF,MAAAA,OAAO,CAACD,IAAI,GAAC,CAAN,CAAP;AACD,KAFqB,EAEnB,GAFmB,CAAxB;AAGE,WAAO,MAAMI,YAAY,CAACF,KAAD,CAAzB;AACL,GALQ,CAAT;AAOAtB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIG,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAZ;AAEAF,IAAAA,KAAK,CAACsB,gBAAN,CAAuB,YAAvB,EAAqC,MAAM;AACvClB,MAAAA,WAAW;AACd,KAFD,EAEE,CAACa,IAAD,CAFF;AAIH,GAPQ,CAAT;AASA,sBACI;AAAQ,IAAA,EAAE,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;GA5CuBlB,S;;KAAAA,S","sourcesContent":["import * as handTrack from 'handtrackjs';\nimport { React, useEffect, useState } from 'react'\n\nexport default function Handtrack() {\n\n    var video = document.getElementById(\"video\");\n    handTrack.startVideo(video);\n\n    const handtracker = () => {\n        var video = document.getElementById(\"video\");\n        var canvas = document.getElementById(\"canvas\");\n        var context = canvas.getContext('2d')\n        var mediasource = video;\n\n        // Load the model.\n        handTrack.load()\n        .then(model => {\n            // detect objects in the image.\n            console.log(\"model loaded\")\n            model.detect(video).then(predictions => {\n                console.log('Predictions: ', predictions);\n                model.renderPredictions(predictions, canvas, context, mediasource);\n            });\n        });\n    }\n\n    const [time,setTime] = useState(0);\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            setTime(time+1);\n          }, 500);\n          return () => clearTimeout(timer);\n    },)\n\n    useEffect(() => {\n        var video = document.getElementById(\"video\");\n        \n        video.addEventListener('loadeddata', () => {\n            handtracker(); \n        },[time]);\n     \n    })\n\n    return (\n        <canvas id=\"canvas\"></canvas>\n    )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}